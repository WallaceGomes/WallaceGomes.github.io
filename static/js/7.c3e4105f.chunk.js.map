{"version":3,"sources":["assets/logo.svg","hooks/http-hook.js","components/Button/styles.js","components/Button/index.js","components/Logo/styles.js","components/Logo/index.js","util/validators.js","components/Input/styles.js","components/Input/index.js","pages/ResetPass/styles.js","pages/ResetPass/index.js"],"names":["module","exports","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","StyledButton","styled","button","Button","props","type","onClick","disabled","children","MainLogo","Logo","history","useHistory","src","logo","alt","to","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","length","test","Label","label","Input","name","setValue","placeholder","htmlFor","onChange","e","target","Container","div","Validate","small","customStyles","overlay","position","top","left","right","bottom","backgroundColor","content","marginRight","transform","color","fontWeigth","Modal","setAppElement","ResetPass","userPassword","setUserPassword","isPasswordValid","modalIsOpen","setIsOpen","modalText","setModalText","switchModalState","prevMode","authSubmitHandler","event","preventDefault","window","location","href","token","slice","process","JSON","stringify","newPassword","console","log","asOverLay","isOpen","onRequestClose","style","contentLabel","onSubmit"],"mappings":"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","file":"static/js/7.c3e4105f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4e74481f.svg\";","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState();\n\n\tconst activeHttpRequests = useRef([]);\n\n\n\tconst sendRequest = useCallback(\n\t\tasync (url, method = 'GET', body = null, headers = {}) => {\n\t\t\tsetIsLoading(true);\n\n\t\t\t//caso o usuário realise alguma ação inesperada durante a aperação\n\t\t\tconst httpAbortCtrl = new AbortController();\n\t\t\tactiveHttpRequests.current.push(httpAbortCtrl);\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\tmethod: method,\n\t\t\t\t\tbody: body,\n\t\t\t\t\theaders: headers,\n\t\t\t\t\tsignal: httpAbortCtrl.signal\n\t\t\t\t});\n\n\t\t\t\tconst responseData = await response.json();\n\n\t\t\t\tactiveHttpRequests.current = activeHttpRequests.current.filter(\n\t\t\t\t\treqCtrl => reqCtrl !== httpAbortCtrl\n\t\t\t\t);\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(responseData.message);\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn responseData;\n\t\t\t} catch (err) {\n\n\t\t\t\tsetError('Unable to reach the server! Try again later...');\n\t\t\t\tsetIsLoading(false);\n\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}, []);\n\n\tconst clearError = () => {\n\t\tsetError(null);\n\t};\n\n\tuseEffect(() => {\n\t\treturn () => {\n\n\t\t\tactiveHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n\t\t};\n\t}, []);\n\n\treturn { isLoading, error, sendRequest, clearError };\n};\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n\theight: 35px;\n\twidth: 90px;\n\tbackground: #0d0d0d;\n\tborder: 1px solid #ffff33;\n\tcolor: #fff;\n\tfont-weight: bold;\n\tcursor: pointer;\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\tborder-radius: 3px;\n\tfont-size: 14px;\n\n\t&:hover{\n\t\tcolor: #000000;\n\t\tbackground: #fff;\n\t\ttransition: 0.3s;\n\t}\n\n\t&:disabled,\n\t&:hover:disabled,\n\t&:active:disabled {\n\t\tbackground: #ccc;\n\t\tcolor: #979797;\n\t\tborder-color: #ccc;\n\t\tcursor: not-allowed;\n\t}\n`;\n","import React from 'react';\n\nimport { StyledButton } from './styles';\n\nconst Button = props => {\n\treturn (\n\t\t<StyledButton\n\t\t\ttype={props.type}\n\t\t\tonClick={props.onClick}\n\t\t\tdisabled={props.disabled}\n\t\t>\n\t\t\t{props.children}\n\t\t</StyledButton>\n\t);\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const MainLogo = styled.button`\n\n\t&:hover{\n\t\tcursor: pointer;\n\t}\n\tbackground: rgba(0,0,0,0);\n\tborder: none;\n\n\timg{\n\t\twidth: 90px;\n\theight: 70px;\n\tborder-radius: 5px;\n\tpadding-left: 20px;\n\t}\n`;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { MainLogo } from './styles';\nimport logo from '../../assets/logo.svg';\nimport { Link } from 'react-router-dom';\n\n//aqui dá pra fazer a logo dinâmica\n//trocar a por link depois\n\nconst Logo = () => {\n\n\tconst history = useHistory();\n\n\tconst redirectHandler = () => {\n\t\thistory.push(\"/\");\n\t}\n\n\treturn <MainLogo onClick={() => redirectHandler()} ><img src={logo} alt=\"Logo\" /><Link to=\"/\"></Link></MainLogo>;\n};\n\nexport default Logo;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n\ttype: VALIDATOR_TYPE_MINLENGTH,\n\tval: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n\ttype: VALIDATOR_TYPE_MAXLENGTH,\n\tval: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\n//função que recebe o valor que o usuário digita e checa por todos os validators que foram passados como props\nexport const validate = (value, validators) => {\n\tlet isValid = true;\n\tfor (const validator of validators) {\n\t\tif (validator.type === VALIDATOR_TYPE_REQUIRE) {\n\t\t\tisValid = isValid && value.length > 0;\n\t\t}\n\t\tif (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n\t\t\tisValid = isValid && value.length >= validator.val;\n\t\t}\n\t\tif (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n\t\t\tisValid = isValid && value.length <= validator.val;\n\t\t}\n\t\tif (validator.type === VALIDATOR_TYPE_MIN) {\n\t\t\tisValid = isValid && +value >= validator.val;\n\t\t}\n\t\tif (validator.type === VALIDATOR_TYPE_MAX) {\n\t\t\tisValid = isValid && +value <= validator.val;\n\t\t}\n\t\tif (validator.type === VALIDATOR_TYPE_EMAIL) {\n\t\t\tisValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n\t\t}\n\t}\n\treturn isValid;\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  position: relative;\n\tmargin-bottom: 2rem;\n\n  input {\n    background-color: #00001a;\n    border: 2px solid #cccc00;\n    border-radius: 3px;\n    padding: 16px;\n    color: #fff;\n    font-size: 16px;\n    transition: 180ms ease-in-out;\n    &::placeholder {\n      color: rgba(255, 255, 255, 0.4);\n    }\n\n    &:focus {\n      border: 2px solid;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { Label } from './styles';\n\nconst Input = ({ name, type = 'text', value, setValue, placeholder }) => {\n\n\treturn (\n\t\t<Label htmlFor={name}>\n\t\t\t<input\n\t\t\t\tname={name}\n\t\t\t\ttype={type}\n\t\t\t\tvalue={value}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tonChange={(e) => setValue(e.target.value)}\n\t\t\t/>\n\t\t</Label>\n\t);\n\n}\n\nexport default Input;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tbackground: #262626;\n\twidth: 320px;\n\tmargin: 180px auto;\n\tpadding: 10px;\n\tborder-radius: 5px;\n\n\t\tbutton img{\n\t\t\twidth: 100px;\n\t\t\tmargin-left: 90px;\n\t\t}\n\n\t\th1{\n\t\t\tcolor: #fff;\n\t\t\tmargin-bottom: 10px;\n\t\t\tmargin-left: 110px;\n\t\t}\n\t\tform label{\n\t\t\tjustify-content: space-evenly;\n\t\t}\n\t\tform Button {\n\t\t\twidth: 220px;\n\t\t\tmargin-left: 40px;\n\t\t\tfont-size: 16px;\n\t\t}\n`;\n\nexport const SwitchMode = styled.div`\n\tmargin: 10px;\n\tmargin-left: 30px;\n\tButton {\n\t\tmargin-left: 5px;\n\t\tfont-weight: 400;\n    height: auto;\n    font-size: 12px;\n\t}\n\tsmall{\n\t\tcolor: #fff;\n\t}\n`;\n\nexport const Validate = styled.small`\ncolor: #ff3333;\nmargin-left: 50px;\n`;\n","import React, { useState } from 'react';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { useHttpClient } from '../../hooks/http-hook';\nimport LoadingSpinner from '../../components/LoadingSpiner';\nimport Logo from '../../components/Logo';\nimport { validate, VALIDATOR_MINLENGTH } from '../../util/validators';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nimport { Container, Validate } from './styles';\n\n//Modal styles\nconst customStyles = {\n\toverlay: {\n\t\tposition: 'fixed',\n\t\ttop: 0,\n\t\tleft: 0,\n\t\tright: 0,\n\t\tbottom: 0,\n\t\tbackgroundColor: 'rgba(0, 0, 0, 0.75)'\n\t},\n\tcontent: {\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\tright: 'auto',\n\t\tbottom: 'auto',\n\t\tmarginRight: '-50%',\n\t\ttransform: 'translate(-50%, -50%)',\n\t\tbackgroundColor: '#262626',\n\t\tcolor: '#fff',\n\t\tfontWeigth: 'bold'\n\t}\n};\n\nModal.setAppElement('#root');\n\nconst ResetPass = () => {\n\n\tconst [userPassword, setUserPassword] = useState('');\n\tconst { sendRequest, isLoading } = useHttpClient();\n\tconst history = useHistory();\n\n\t//isso aqui está horrivel e dá pra melhorar, é temporário...\n\tconst isPasswordValid = validate(userPassword, [VALIDATOR_MINLENGTH(6)]);\n\n\tconst [modalIsOpen, setIsOpen] = useState(false);\n\tconst [modalText, setModalText] = useState('');\n\n\tfunction switchModalState() {\n\t\tsetIsOpen((prevMode) => !prevMode);\n\t\tif (modalIsOpen) {\n\t\t\thistory.push(\"/login\");\n\t\t}\n\t}\n\n\tconst authSubmitHandler = async (event) => {\n\t\tevent.preventDefault();\n\n\t\t//gambiarra pra pegar o token\n\t\t//dá pra fazer com o withRouter, mas não entendi\n\t\tconst url = window.location.href;\n\t\tconst token = url.slice(-229);\n\t\ttry {\n\t\t\tconst response = await sendRequest(\n\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/users/reset/${token}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tnewPassword: userPassword,\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t);\n\t\t\tconsole.log(response);\n\t\t\tsetModalText(response.message);\n\t\t\tswitchModalState();\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tsetModalText(err.message);\n\t\t\tswitchModalState();\n\t\t}\n\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{isLoading && <LoadingSpinner asOverLay />}\n\t\t\t<Modal\n\t\t\t\tisOpen={modalIsOpen}\n\t\t\t\tonRequestClose={switchModalState}\n\t\t\t\tstyle={customStyles}\n\t\t\t\tcontentLabel=\"Alert Modal\"\n\t\t\t>\n\n\t\t\t\t<div>{modalText}</div>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<Button onClick={switchModalState}>Close</Button>\n\t\t\t</Modal>\n\t\t\t<Container>\n\t\t\t\t<Logo></Logo>\n\t\t\t\t<form onSubmit={authSubmitHandler}>\n\t\t\t\t\t{!isPasswordValid && (\n\t\t\t\t\t\t<Validate>Password min 6 chars</Validate>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"userPass\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tvalue={userPassword}\n\t\t\t\t\t\tsetValue={setUserPassword}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button type=\"submit\">Reset Password</Button>\n\t\t\t\t</form>\n\t\t\t</Container>\n\t\t</>\n\t)\n}\n\nexport default ResetPass;\n"],"sourceRoot":""}